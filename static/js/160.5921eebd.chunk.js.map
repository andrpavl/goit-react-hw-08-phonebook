{"version":3,"file":"static/js/160.5921eebd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/Contacts/selectors.js","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","components/Phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/Contacts/selectors';\nimport { setFilter } from 'redux/Contacts/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label htmlFor=\"name\">\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        placeholder=\"Enter name\"\n        name=\"name\"\n        type=\"text\"\n        value={value}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__J23fu\",\"label\":\"Phonebook_label__Qzztg\",\"btnAdd\":\"Phonebook_btnAdd__vfYeI\",\"input\":\"Phonebook_input__8yiEQ\",\"loader\":\"Phonebook_loader__-5wJH\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { nanoid } from 'nanoid';\nimport css from './Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/Contacts/selectors';\nimport { addContact, fetchContacts } from 'redux/Contacts/operations';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nexport function Phonebook() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const isInContacts = contacts.some(contact => contact.name === name);\n    if (isInContacts) {\n     toast.warn(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        id: nanoid(),\n        name: name,\n        number: number,\n      };\n      dispatch(addContact(newContact));\n      toast.success(`${name} is added to your contacts`);\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const nameId = nanoid();\n  const telId = nanoid();\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      {isLoading && !error && (\n        <div className={css.loader}>\n          <Loader />\n        </div>\n      )}\n      <label htmlFor={nameId} className={css.label}>\n        Name\n        <input\n          placeholder=\"Enter name\"\n          className={css.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor={telId} className={css.label}>\n        Phone\n        <input\n          placeholder=\"Enter phone number\"\n          className={css.input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.btnAdd} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { Filter } from \"components/Filter/Filter\";\n// import Loader from \"components/Loader/Loader\";\nimport { Phonebook } from \"components/Phonebook/Phonebook\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { fetchContacts } from \"redux/Contacts/operations\";\n// import { selectIsLoading } from \"redux/Contacts/selectors\";\n\nexport default function Contacts() { \n    \n    // const dispatch = useDispatch();\n    // const isLoading = useSelector(selectIsLoading);\n\n    // useEffect(() => {\n    //     dispatch(fetchContacts())\n    // }, [dispatch]);\n\n    return (\n        <>\n            <h2>Phonebook</h2>\n            <Phonebook />\n            <h2>Contacts</h2>\n            <Contacts />\n            <Filter />\n            {/* {isLoading && <Loader/>} */}\n        </>\n    )\n}"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Filter","dispatch","useDispatch","value","useSelector","htmlFor","className","css","placeholder","name","type","onChange","e","setFilter","target","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","t","f","n","Array","isArray","arguments","Phonebook","useEffect","fetchContacts","useState","setName","number","setNumber","handleChange","nameId","telId","onSubmit","preventDefault","some","contact","toast","newContact","addContact","handleAddContact","Loader","pattern","title","required","Contacts"],"sourceRoot":""}