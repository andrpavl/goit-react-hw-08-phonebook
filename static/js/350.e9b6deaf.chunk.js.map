{"version":3,"file":"static/js/350.e9b6deaf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/Contacts/selectors.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/Contacts/selectors';\nimport { setFilter } from 'redux/Contacts/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label htmlFor=\"name\">\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        placeholder=\"Enter name\"\n        name=\"name\"\n        type=\"text\"\n        value={value}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n}\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__J23fu\",\"label\":\"Phonebook_label__Qzztg\",\"btnAdd\":\"Phonebook_btnAdd__vfYeI\",\"input\":\"Phonebook_input__8yiEQ\",\"loader\":\"Phonebook_loader__-5wJH\"};","import { nanoid } from 'nanoid';\nimport css from './Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/Contacts/selectors';\nimport { addContact, fetchContacts } from 'redux/Contacts/operations';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nexport function Phonebook() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const isInContacts = contacts.some(contact => contact.name === name);\n    if (isInContacts) {\n     toast.warn(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        id: nanoid(),\n        name: name,\n        number: number,\n      };\n      dispatch(addContact(newContact));\n      toast.success(`${name} is added to your contacts`);\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const nameId = nanoid();\n  const telId = nanoid();\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      {isLoading && !error && (\n        <div className={css.loader}>\n          <Loader />\n        </div>\n      )}\n      <label htmlFor={nameId} className={css.label}>\n        Name\n        <input\n          placeholder=\"Enter name\"\n          className={css.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor={telId} className={css.label}>\n        Phone\n        <input\n          placeholder=\"Enter phone number\"\n          className={css.input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.btnAdd} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { Filter } from \"components/Filter/Filter\";\nimport Loader from \"components/Loader/Loader\";\nimport { Phonebook } from \"components/Phonebook/Phonebook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/Contacts/operations\";\nimport { selectIsLoading } from \"redux/Contacts/selectors\";\n\nexport default function Contacts() { \n    \n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n    return (\n        <>\n            <h2>Phonebook</h2>\n            <Phonebook />\n            <h2>Contacts</h2>\n            <Contacts />\n            <Filter />\n            {isLoading && <Loader/>}\n        </>\n    )\n}"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Filter","dispatch","useDispatch","value","useSelector","htmlFor","className","css","placeholder","name","type","onChange","e","setFilter","target","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","Phonebook","useEffect","fetchContacts","useState","setName","number","setNumber","handleChange","nameId","nanoid","telId","onSubmit","preventDefault","some","contact","toast","newContact","id","addContact","handleAddContact","pattern","title","required","Contacts"],"sourceRoot":""}